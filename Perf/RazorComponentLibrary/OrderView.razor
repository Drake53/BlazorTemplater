@using DataModel
<div>
    <h1>Order for @Order.Name</h1>
    <div>
        <b>Delivery Address</b>
        @* with Razor we can re-use *@
        <AddressView Address="Order.DeliveryAddress" />
    </div>
    <table>
        <thead>
            <tr>
                <th>Item</th>
                <th>Code</th>
                <th>Unit</th>
                <th>Qty</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var row in Order.Rows)
            {
                <tr>
                    <td>@row.Item</td>
                    <td>@row.Code</td>
                    <td style="text-align: right">@row.UnitPrice.ToString("c")</td>
                    <td style="text-align: right">@row.Quantity.ToString("n0")</td>
                    <td style="text-align: right">@row.Total.ToString("c")</td>
                </tr>
            }
            <tr>
                <td colspan="4">@(Order.TaxRate.HasValue ? "Subtotal" :"Total")</td>
                <td style="text-align: right">@Order.SubTotal.ToString("c")</td>
            </tr>
            @* show tax rows if TaxRate is set *@
            @if (Order.TaxRate.HasValue)
            {
                <tr>
                    <td colspan="4">Tax Rate</td>
                    <td style="text-align: right">@Order.TaxRate.Value.ToString("p1")</td>
                </tr>
                <tr>
                    <td colspan="4">Total</td>
                    <td style="text-align: right">@Order.Total.ToString("c")</td>
                </tr>
            }
        </tbody>
    </table>
</div>
@code
{
    [Parameter] public OrderModel Order { get; set; }


}